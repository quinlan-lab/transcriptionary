---
output_format: 'html' #can be HTML, PNG, or SVG
output_filepath: 'transcriptionary-example.html'
transcripts: 'all' #['flattened-exons'] #can be: (1) "transcript_names": list all possible transcript names for the given configuration file (does not create a plot); (2) "[flattened-exons]": overlay all transcripts to create a transcript with the largest possible exons (used to view all possible exonic variants); (3) "all": plot all transcripts, including `flattened-exons`; (4) "[`<transcript_name_1>`, `<transcript_name_2>`, ...]": specify transcripts
###Data params
gff_path: 'test/data/test.gff3'  #if not database file, database will be created for you

####Plot params
gene_name: 'KCNQ2'
chrom: chr20

plot_height: 200
plot_width: 1500
track_height: 10
exon_height: 16
intron_size: 20

plot_UTRs: True
plot_direction: True

glyph_colors:
    intron: 'gray 11'
    exon: 'davys gray'
    arrow: '#e8e8e8'
    UTR: '#969696'
    variant: 'charcoal' #default lollipop color if no severity information

palettes_filepath: 'default_colors/palettes.yaml' #filepath to palettes config
named_colors_filepath: 'default_colors/named_colors.yaml' #filepath to named colors config
track_palette: 'bang_wong_palette' #palette to draw random track colors from; can be any one palette in palettes.yaml
...
---
#variants
plot_variants: True

#VCF example
variant_format: 'vcf'
filepath: 'test/data/gnomad.exomes.chr20.subset.vcf.gz'
chrom: chr20
info_annotations: #INFO fields to add to hover boxes (VCF only)
    - pab_max
    - popmax
vep: #VCF only; leave empty if not VEP annotated
    field_name: vep #name of INFO field with VEP string (e.g. vep, ann, csq)
    vep_fields: #vep fields to add to hover annotations
    - SYMBOL
    - Amino_acids
    - Consequence

#BED example
# variant_format: 'bed' #can be VCF or BED
# filepath: 'test/data/gnomad_v3.1.1_KCNQ2_SNVs.bed'
# header: ['Chromosome', 'Start', 'End', 'Reference', 'Alternate', 'Allele Count', 'Allele Number', 'Allele Frequency', 'VEP Annotation'] # BED only
# chrom: chr20

default_y_axis: 'AC' # can be toggled with HTML output
default_y_axis_scale: 'log' # can be toggled with HTML output

min_lollipop_height: 15
lollipop_radius: 5
lollipop_line_width: 2
variant_severity_colors:
    LOW: 'apple green'
    MED: '#f6aa1c'
    HIGH: '#e01e37'
    NONE: '#171717'
...

---
###User defined tracks:

pfam_domains:
    format: 'gtf' #can be GTF or BED
    filepath: 'test/data/chr20.pfam.sorted.gtf' #must be .bed, .gff, .gtf, .gff.db, or .gtf.db; if not gff/gtf database, database will be created for you
    chrom: chr20
    color_by: 'gene_id' #gtf field to color tracks by
    annotate_with: #fields to annotate in hover box
        - 'transcript_id'
    colors: #leave empty to color all randomly
        Ion_trans: 'orange soda' #color these boxes as specified, any unspecified boxes colored randomly
        KCNQC3-Ank-G_bd: '#A09BE7'

ucsc_repeats:
    format: 'gtf' #can be GTF or BED
    chrom: chr20
    color_by: 'gene_id' #gtf field to color tracks by
    annotate_with: #fields to annotate in hover box
        - 'transcript_id'
    filepath: 'test/data/ucsc_repeats_grch38.gtf' #must be .bed, .gff, .gtf, .gff.db, or .gtf.db; if not gff/gtf database, database will be created for you
    colors:
        trf: '#000000'

ucsc_zebrafish_chain:
    format: 'bed' #can be GTF or BED
    filepath: 'test/data/ucsc_zebrafish_chain.bed' #must be .bed, .gff, .gtf, .gff.db, or .gtf.db; if not gff/gtf database, database will be created for you
    chrom: chr20
    header: ['chrom', 'start', 'end', 'contig'] #list of field names in order (does not support BED fields with header)
    color_by: 'contig' #bed field to color tracks by
    annotate_with: #bed fields to annotate    
...
---
###User defined axes:

Coverage:
    #axis params
    y_axis_label: 'Sequencing Coverage (30x)'
    num_ticks: 3
    tick_precision: 2 #number of decimal places
    tick_scientific_notation: False #format ticks to scientific notation
    smoothing_slider: False
    lines:
        Coverage:
            #line params
            format: 'bedgraph' #can be BEDGRAPH, CSV, or TSV
            filepath: 'test/data/coverage.bedgraph'
            chrom: '20'
            color: 'zomp'
            alpha: 0.5
            fill_area: True

Mutation counts:
    y_axis_label: 'Number of mutations'
    num_ticks: 3
    tick_precision: 4 #
    tick_scientific_notation: False
    smoothing_slider: True
    lines:
        Expected mutation counts: 
            format: 'csv' #can be BEDGRAPH, CSV, or TSV
            filepath: 'test/data/expected_mut_counts.csv'
            chrom: 'chr20'
            color: '#f26419'
            alpha: 1
            fill_area: False
        Observed mutation counts:
            format: 'tsv' #can be BEDGRAPH, CSV, or TSV
            filepath: 'test/data/observed_mut_counts.tsv'
            chrom: 'chr20'
            color: '#19a7f2'
            alpha: 1
            fill_area: False
